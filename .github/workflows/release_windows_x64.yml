name: Release win64

on:
  push:
    tags:
      - 'v*'  # 匹配v开头的tag
permissions:
  contents: write   # 关键：允许创建/更新 Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - run: gh auth status
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Download NASM
      working-directory: ${{github.workspace}}
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri https://www.nasm.us/pub/nasm/releasebuilds/2.16.03/win64/nasm-2.16.03-win64.zip -OutFile nasm.zip
        Expand-Archive nasm.zip -DestinationPath nasm
        $nasmDir = (Get-ChildItem nasm -Directory | Select-Object -First 1).FullName
        echo $nasmDir >> $env:GITHUB_PATH
        & "$nasmDir\nasm.exe" -v

    - name: Download openssl-1.1
      working-directory: ${{github.workspace}}
      shell: pwsh
      run: |
        $ErrorActionPreference = "Stop"
        $OPENSSL_URL = "https://github.com/openssl/openssl/releases/download/OpenSSL_1_1_1w/openssl-1.1.1w.tar.gz"
        Invoke-WebRequest -Uri $OPENSSL_URL -OutFile openssl.tar.gz
        tar -xzf openssl.tar.gz

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '5.15.2'
        cache: true
        arch: 'win64_msvc2019_64'
        modules: 'qtcharts qtdatavis3d'

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}\build -S ${{github.workspace}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}\build\install

    - name: Build
      run: cmake --build ${{github.workspace}}\build --config Release

    - name: Build OpenSSL 1.1.1w (Win64)
      shell: cmd
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        set PATH=%PATH%;${{ github.workspace }}\nasm\nasm-2.16.03
        dir ${{ github.workspace }}
        cd ${{ github.workspace }}\openssl-1.1.1w
        perl Configure VC-WIN64A --prefix=%CD%\_install
        nmake
        nmake install
        copy _install\bin\libssl-1_1-x64.dll ${{ github.workspace }}\bin\Release
        copy _install\bin\libcrypto-1_1-x64.dll ${{ github.workspace }}\bin\Release

    - name: install
      working-directory: ${{github.workspace}}\build
      run: cmake --install ${{github.workspace}}\build --config Release
    - name: generate installer package
      working-directory: ${{github.workspace}}\build
      run: cpack -C Release -G NSIS
    - name: generate zip package
      working-directory: ${{github.workspace}}\build
      run: cpack -C Release -G ZIP

    - name: Package artifacts
      run: |
        mkdir -p release
        cp ${{github.workspace}}/build/*.exe release/
        cp ${{github.workspace}}/build/*.zip release/

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release/*.exe
          release/*.zip
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
